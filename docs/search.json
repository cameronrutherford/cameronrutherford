[
  {
    "objectID": "quarto/resume.html",
    "href": "quarto/resume.html",
    "title": "Resume",
    "section": "",
    "text": "This will be where my main resume is rendered, supported by other files?"
  },
  {
    "objectID": "quarto/resume.html#about",
    "href": "quarto/resume.html#about",
    "title": "Resume",
    "section": "",
    "text": "This will be where my main resume is rendered, supported by other files?"
  },
  {
    "objectID": "quarto/resume.html#old-github-resume",
    "href": "quarto/resume.html#old-github-resume",
    "title": "Resume",
    "section": "Old GitHub resume",
    "text": "Old GitHub resume\n\nGâ€™day! ðŸ‘‹ðŸ‡¦ðŸ‡ºðŸ‡ºðŸ‡¸! My name is Cameron Rutherford\n\n\nSoftware developer and Adult Chess Improver â™Ÿ\n\n\nðŸ‘” Iâ€™m currently working at PNNL as a Software Engineer\nðŸ“« How to reach me: cameron.rutherford@me.com\nðŸ“„ Most recent Resume: 12-11-22 Resume\n\n\nConnect with me:\n\n\n  \n\nLanguages and Tools:"
  },
  {
    "objectID": "quarto/resume.html#notes-on-quarto",
    "href": "quarto/resume.html#notes-on-quarto",
    "title": "Resume",
    "section": "Notes on Quarto",
    "text": "Notes on Quarto\n\n\n\n\n\n\nNote\n\n\n\nI included that old resume as a file itself in old_resume.qmd, and then rendered this in this quarto document using the following snippet:\n{{&lt; include &lt;file_to_include&gt;.qmd &gt;}}\nMake sure to change to the correct file when copying.\n\n\n\n\n\n\n\n\nTip\n\n\n\n\n\nCheck out the source code for this if you havenâ€™t already in the side bar.\nIn order to render quarto source code without rendering it in a document, you have to add another { } to your source code, and use a markdown source comment.\nI rendered the note above with this source code:\n``` markdown\n{{{ include &lt;file_to_include&gt;.qmd }}}\n```\nAlso, you need to vary the number of backticks when starting the markdown block compared to the source code you are commenting. I used four ``` in rednering the above source code comment, whereas I only used 3 in the above note\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\n\n\nIf I keep exaplaining this in markdown, it will be recursive. Check out the source code on the right sidebar for this (and other) pages if you have not already. This is also partly the reason you canâ€™t self-reference a file and do recursion in quarto.\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nNote that there are five types of callouts, including: note, warning, important, tip, and caution.\nYou can also make collabsable sections!"
  },
  {
    "objectID": "personal-repo.html",
    "href": "personal-repo.html",
    "title": "Personal Website",
    "section": "",
    "text": "If you just want my resume, click here, or see the link in the navbar."
  },
  {
    "objectID": "personal-repo.html#about",
    "href": "personal-repo.html#about",
    "title": "Personal Website",
    "section": "About",
    "text": "About\nCheck out the rendered HTML version hosted in GitHub pages here:\nhttps://cameronrutherford.github.io/CameronRutherford\nThis document is generated by personal-repo.qmd.\nI render this using Quarto, and build with VSCode using a Development Container.\nThis serves as my resume, blog, and self-referential documentation!"
  },
  {
    "objectID": "personal-repo.html#quick-start",
    "href": "personal-repo.html#quick-start",
    "title": "Personal Website",
    "section": "Quick Start",
    "text": "Quick Start\nInstall Docker, VSCode, and configure the Dev Container Extension. Then using the command pallette, build the container and open this folder."
  },
  {
    "objectID": "personal-repo.html#dev-container-configuration",
    "href": "personal-repo.html#dev-container-configuration",
    "title": "Personal Website",
    "section": "Dev Container Configuration",
    "text": "Dev Container Configuration\nI used Python as the base image, and then install Quarto in the Dockerfile:\n# Lets use the latest Python (3.11 was latest at the time)\n# https://github.com/devcontainers/images/tree/main/src/python\nFROM mcr.microsoft.com/devcontainers/python:3.11-bookworm\n\n# Install quarto\nRUN wget https://github.com/quarto-dev/quarto-cli/releases/download/v1.4.251/quarto-1.4.251-linux-amd64.tar.gz\nRUN tar -xvzf quarto-1.4.251-linux-amd64.tar.gz\n# I don't really like how this works, but it works...\nENV PATH=$PATH:/quarto-1.4.251/bin\n\n# I guess I need Jupyter\nRUN pipx install --upgrade pip && \\\n    pipx install jupyter\nAnd this is my json config:\n{\n    \"build\": {\n        \"dockerfile\": \"Dockerfile\"\n\t},\n\t\"customizations\": {\n\t\t\"vscode\": {\n\t\t\t\"extensions\": [\n\t\t\t\t\"quarto.quarto\"\n\t\t\t]\n\t\t}\n\t}\n}"
  },
  {
    "objectID": "personal-repo.html#quarto-configuration",
    "href": "personal-repo.html#quarto-configuration",
    "title": "Personal Website",
    "section": "Quarto Configuration",
    "text": "Quarto Configuration\n\nWorkflow\nBuild and render the project using:\nquarto render && quarto preview\n\n\n\n\n\n\nTip\n\n\n\nThis assumes that Quarto is installed, or you are running in the dev container.\n\n\n\n\nOutput Formats\nAs you can see in the sidebar, this is also rendered into raw GitHub Flavored Markdown with Quarto.\nThis is configured in the top of this fileâ€™s source code. Other output formats are used for other files in this repository. In order to ensure the main GitHub README.md has the correct file, we specify a post-render stage that copies the file over:\nproject:\n  type: website\n  title: \"Personal Repository\"\n  output-dir: docs\n  post-render: \n    - cp docs/README.md .\n  render:\n    - \"*.qmd\"\n    - \"*.ipynb\"\n    # No need to render files in more than one place - this file is just included in another\n    - \"!quarto/old_resume.qmd\"\n\nformat:\n  html: \n    theme: vapor\n\nexecute:\n  freeze: auto\n\nwebsite:\n  repo-url: https://github.com/CameronRutherford/CameronRutherford\n  repo-actions: [edit]\n  search:\n    type: overlay\n  navbar:\n    search: true\n    left:\n      - quarto/resume.qmd \n    tools:\n      - icon: twitter\n        href: https://twitter.com/cam_rutherford_\n        text: Quarto Twitter\n      - icon: github\n        href: https://github.com/CameronRutherford\n        text: Quarto GitHub\n      - icon: linkedin\n        href: https://www.linkedin.com/in/robert-c-rutherford/\n        text: LinkedIn\nAs you can see, some other configuration is also specified, such as the HTML theme, navbar config, and the output dir.\n\n\nExtensions\nThese all are installed manually from the command line, and are not included in the Dockerfile. This is because the whole extesion ecosystem works through the _extensions directory.\nTo install the first extension, I ran:\nquarto add --no-prompt quarto-ext/include-code-files\n\nExtension List\n\ninclude-code-files"
  },
  {
    "objectID": "personal-repo.html#github-pages-configuration",
    "href": "personal-repo.html#github-pages-configuration",
    "title": "Personal Website",
    "section": "GitHub Pages Configuration",
    "text": "GitHub Pages Configuration\nThere are many ways to deploy Quarto pages. You can read more about choices in rendering Quarto in CI here. I am choosing to render locally, and simply point GitHub pages to the folder that is stored in git. This isnâ€™t the gold standard in reproducibility, but the trade off is that this is much faster to iterate on.\n\nInitial Config\nI ran this initially per the docs:\nquarto publish gh-pages\nI then added a GitHub action to auto publish based on what is in the repository, and I decided to render this website locally before publishing to make things easier:\non:\n  workflow_dispatch:\n  push:\n    branches: main\n\nname: Quarto Publish\n\njobs:\n  build-deploy:\n    # Need this for potential python deps so why not\n    runs-on: jupyter/base-notebook\n    permissions:\n      contents: write\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v3\n\n      - name: Set up Quarto\n        uses: quarto-dev/quarto-actions/setup@v2\n\n      - name: Render and Publish\n        uses: quarto-dev/quarto-actions/publish@v2\n        with:\n          target: gh-pages\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\nThis method does somewhat clutter git history with updates of the website along with the files, which isnâ€™t ideal. I think I will shift to CI builds in the future."
  }
]